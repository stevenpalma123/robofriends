{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundary.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","props","name","email","className","alt","src","id","CardList","cardComponent","robots","map","robot","SearchBox","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","ErrorBoundary","state","hasError","error","info","this","setState","React","Component","App","onSearchChange","event","searchfield","target","value","fetch","then","response","json","users","filteredRobots","filter","toLocaleLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAiBeA,EAfF,SAACC,GAAW,IACdC,EAAeD,EAAfC,KAAMC,EAASF,EAATE,MACb,OACI,sBAAKC,UAAU,mDAAf,UACG,qBAAKC,IAAI,aAAaC,IAAG,+BAA0BL,EAAMM,GAAhC,cACxB,gCACI,6BACKL,IAEL,4BAAIC,WCGLK,EAXE,SAAC,GAAe,IACvBC,EADsB,EAAZC,OACaC,KAAI,SAACC,GAC9B,OAAQ,cAAC,EAAD,CAAqBL,GAAIK,EAAML,GAAIL,KAAMU,EAAMV,KAAMC,MAAOS,EAAMT,OAAvDS,EAAML,OAE7B,OACI,8BACIE,KCMGI,EAbG,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aACjB,OACI,qBAAKV,UAAU,MAAf,SACI,uBACAW,KAAK,SACLC,YAAY,eACZZ,UAAU,mCACVa,SAAUH,OCCPI,EARA,SAACjB,GACZ,OACI,qBAAKkB,MAAO,CAACC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,SAApE,SACKrB,EAAMsB,YCiBJC,E,kDAnBX,WAAYvB,GAAQ,IAAD,8BACf,cAAMA,IACDwB,MAAQ,CACTC,UAAU,GAHC,E,8DAODC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,M,+BAI3B,OAAGG,KAAKJ,MAAMC,SACH,wDAEJG,KAAK5B,MAAMsB,a,GAhBIQ,IAAMC,WCuDnBC,G,wDAhDX,aAAe,IAAD,8BACV,gBAkBJC,eAAiB,SAACC,GACd,EAAKL,SAAS,CAACM,YAAcD,EAAME,OAAOC,SAlB1C,EAAKb,MAAQ,CACTf,OAAQ,GACR0B,YAAa,IAJP,E,gEAQM,IAAD,OACfG,MAAM,8CAA8CC,MAAK,SAACC,GACvD,OAAOA,EAASC,UAElBF,MAAK,SAAAG,GACF,EAAKb,SAAS,CAAEpB,OAAQiC,S,+BAUvB,IAAD,OAEEC,EAAiBf,KAAKJ,MAAMf,OAAOmC,QAAO,SAAAjC,GAC5C,OAAOA,EAAMV,KAAK4C,oBAAoBC,SAAS,EAAKtB,MAAMW,YAAYU,wBAE1E,OAAgC,IAA7BjB,KAAKJ,MAAMf,OAAOsC,OACV,0CAGX,sBAAK5C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,0BACA,cAAC,EAAD,CAAWU,aAAce,KAAKK,iBAC9B,uBACA,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQkC,e,GAvCpBZ,cCIHiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d12b57ae.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = (props) => {\r\n    const {name, email} = props;\r\n    return (\r\n        <div className=\"bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n           <img alt=\"roboAvatar\" src={`https://robohash.org/${props.id}?200x200`} />\r\n            <div>\r\n                <h2>\r\n                    {name}\r\n                </h2>\r\n                <p>{email}</p>\r\n            </div> \r\n        </div> \r\n    );\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\nconst CardList = ({ robots })=> {\r\n    const cardComponent = robots.map((robot)=>{\r\n        return  <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email}/>\r\n    });\r\n    return (\r\n        <div>\r\n           {cardComponent}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default CardList;","import React from 'react';\r\n\r\nconst SearchBox = ({ searchChange }) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input \r\n            type=\"search\" \r\n            placeholder=\"search robot\" \r\n            className=\"pa3 ba b--green bg-lightest-blue\"\r\n            onChange={searchChange}/>\r\n            \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default SearchBox;\r\n\r\n","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return(\r\n        <div style={{overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Scroll; ","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundary extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info){\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render(){\r\n      if(this.state.hasError){\r\n          return <h1>Oops That Is Not Good!</h1>\r\n      }  \r\n      return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundary;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport SearchBox from '../components/SearchBox';\r\nimport Scroll from '../components/Scroll'; \r\nimport ErrorBoundary from '../components/ErrorBoundary';\r\nimport './App.css';\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        fetch('https://jsonplaceholder.typicode.com/users').then((response)=>{\r\n           return response.json();\r\n        })\r\n        .then(users=>{\r\n            this.setState({ robots: users })\r\n        })\r\n        \r\n        \r\n    }\r\n\r\n    onSearchChange = (event)=>{\r\n        this.setState({searchfield : event.target.value});\r\n    }\r\n\r\n    render(){\r\n\r\n        const filteredRobots = this.state.robots.filter(robot => {\r\n            return robot.name.toLocaleLowerCase().includes(this.state.searchfield.toLocaleLowerCase())\r\n        });\r\n        if(this.state.robots.length === 0){\r\n            return <h1>Loading!</h1>\r\n        }\r\n        return (\r\n        <div className=\"tc\">\r\n            <h1 className=\"f2\">RobotFriends</h1>\r\n            <SearchBox searchChange={this.onSearchChange}/>\r\n            <hr/>\r\n            <Scroll>\r\n                <ErrorBoundary>\r\n                    <CardList robots={filteredRobots} />\r\n                </ErrorBoundary>\r\n                 \r\n            </Scroll>\r\n           \r\n        </div>\r\n     );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport \"tachyons\";\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}